(self.webpackChunkimserp=self.webpackChunkimserp||[]).push([[3371],{23371:(K,H,S)=>{"use strict";S.d(H,{s:()=>De});const E=[0,2e3,1e4,3e4,null];class C{constructor(e){this._retryDelays=void 0!==e?[...e,null]:E}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}var d=S(8239);let P=(()=>{class s{}return s.Authorization="Authorization",s.Cookie="Cookie",s})();class U{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class D{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}class J extends D{constructor(e,t){super(),this._innerClient=e,this._accessTokenFactory=t}send(e){var t=this;return(0,d.Z)(function*(){let n=!0;t._accessTokenFactory&&(!t._accessToken||e.url&&e.url.indexOf("/negotiate?")>0)&&(n=!1,t._accessToken=yield t._accessTokenFactory()),t._setAuthorizationHeader(e);const o=yield t._innerClient.send(e);return n&&401===o.statusCode&&t._accessTokenFactory?(t._accessToken=yield t._accessTokenFactory(),t._setAuthorizationHeader(e),yield t._innerClient.send(e)):o})()}_setAuthorizationHeader(e){e.headers||(e.headers={}),this._accessToken?e.headers[P.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&e.headers[P.Authorization]&&delete e.headers[P.Authorization]}getCookieString(e){return this._innerClient.getCookieString(e)}}class v extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class M extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class y extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class V extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class q extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class G extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class L extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class Q extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}var i=(()=>{return(s=i||(i={}))[s.Trace=0]="Trace",s[s.Debug=1]="Debug",s[s.Information=2]="Information",s[s.Warning=3]="Warning",s[s.Error=4]="Error",s[s.Critical=5]="Critical",s[s.None=6]="None",i;var s})();class R{constructor(){}log(e,t){}}R.instance=new R;class b{static isRequired(e,t){if(null==e)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class m{static get isBrowser(){return!m.isNode&&"object"==typeof window&&"object"==typeof window.document}static get isWebWorker(){return!m.isNode&&"object"==typeof self&&"importScripts"in self}static get isReactNative(){return!m.isNode&&"object"==typeof window&&typeof window.document>"u"}static get isNode(){return typeof process<"u"&&process.release&&"node"===process.release.name}}function $(s,e){let t="";return k(s)?(t=`Binary data of length ${s.byteLength}`,e&&(t+=`. Content: '${function ee(s){const e=new Uint8Array(s);let t="";return e.forEach(n=>{t+=`0x${n<16?"0":""}${n.toString(16)} `}),t.substr(0,t.length-1)}(s)}'`)):"string"==typeof s&&(t=`String data of length ${s.length}`,e&&(t+=`. Content: '${s}'`)),t}function k(s){return s&&typeof ArrayBuffer<"u"&&(s instanceof ArrayBuffer||s.constructor&&"ArrayBuffer"===s.constructor.name)}function j(s,e,t,n,o,r){return N.apply(this,arguments)}function N(){return(N=(0,d.Z)(function*(s,e,t,n,o,r){const a={},[c,l]=I();a[c]=l,s.log(i.Trace,`(${e} transport) sending data. ${$(o,r.logMessageContent)}.`);const h=k(o)?"arraybuffer":"text",g=yield t.post(n,{content:o,headers:{...a,...r.headers},responseType:h,timeout:r.timeout,withCredentials:r.withCredentials});s.log(i.Trace,`(${e} transport) request complete. Response status: ${g.statusCode}.`)})).apply(this,arguments)}class ne{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class x{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${(new Date).toISOString()}] ${i[e]}: ${t}`;switch(e){case i.Critical:case i.Error:this.out.error(n);break;case i.Warning:this.out.warn(n);break;case i.Information:this.out.info(n);break;default:this.out.log(n)}}}}function I(){let s="X-SignalR-User-Agent";return m.isNode&&(s="User-Agent"),[s,oe("8.0.0",re(),m.isNode?"NodeJS":"Browser",se())]}function oe(s,e,t,n){let o="Microsoft SignalR/";const r=s.split(".");return o+=`${r[0]}.${r[1]}`,o+=` (${s}; `,o+=e&&""!==e?`${e}; `:"Unknown OS; ",o+=`${t}`,o+=n?`; ${n}`:"; Unknown Runtime Version",o+=")",o}function re(){if(!m.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function se(){if(m.isNode)return process.versions.node}function O(s){return s.stack?s.stack:s.message?s.message:`${s}`}class de extends D{constructor(e){super(),this._logger=e;const t={_fetchType:void 0,_jar:void 0};!function ae(s){return!!(typeof fetch>"u"||m.isNode)&&(s._jar=new(S(57333).CookieJar),s._fetchType=typeof fetch>"u"?S(98190):fetch,s._fetchType=S(86045)(s._fetchType,s._jar),!0)}(t)?this._fetchType=fetch.bind(function ce(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("could not find global")}()):(this._fetchType=t._fetchType,this._jar=t._jar),this._abortControllerType=AbortController;const n={_abortControllerType:this._abortControllerType};(function le(s){return typeof AbortController>"u"&&(s._abortControllerType=S(28470),!0)})(n)&&(this._abortControllerType=n._abortControllerType)}send(e){var t=this;return(0,d.Z)(function*(){if(e.abortSignal&&e.abortSignal.aborted)throw new y;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const n=new t._abortControllerType;let o;e.abortSignal&&(e.abortSignal.onabort=()=>{n.abort(),o=new y});let a,r=null;e.timeout&&(r=setTimeout(()=>{n.abort(),t._logger.log(i.Warning,"Timeout from HTTP request."),o=new M},e.timeout)),""===e.content&&(e.content=void 0),e.content&&(e.headers=e.headers||{},e.headers["Content-Type"]=k(e.content)?"application/octet-stream":"text/plain;charset=UTF-8");try{a=yield t._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:!0===e.withCredentials?"include":"same-origin",headers:{"X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:n.signal})}catch(h){throw o||(t._logger.log(i.Warning,`Error from HTTP request. ${h}.`),h)}finally{r&&clearTimeout(r),e.abortSignal&&(e.abortSignal.onabort=null)}if(!a.ok){const h=yield F(a,"text");throw new v(h||a.statusText,a.status)}const l=yield F(a,e.responseType);return new U(a.status,a.statusText,l)})()}getCookieString(e){let t="";return m.isNode&&this._jar&&this._jar.getCookies(e,(n,o)=>t=o.join("; ")),t}}function F(s,e){let t;switch(e){case"arraybuffer":t=s.arrayBuffer();break;case"text":default:t=s.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`)}return t}class ge extends D{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new y):e.method?e.url?new Promise((t,n)=>{const o=new XMLHttpRequest;o.open(e.method,e.url,!0),o.withCredentials=void 0===e.withCredentials||e.withCredentials,o.setRequestHeader("X-Requested-With","XMLHttpRequest"),""===e.content&&(e.content=void 0),e.content&&(k(e.content)?o.setRequestHeader("Content-Type","application/octet-stream"):o.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));const r=e.headers;r&&Object.keys(r).forEach(a=>{o.setRequestHeader(a,r[a])}),e.responseType&&(o.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{o.abort(),n(new y)}),e.timeout&&(o.timeout=e.timeout),o.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),o.status>=200&&o.status<300?t(new U(o.status,o.statusText,o.response||o.responseText)):n(new v(o.response||o.responseText||o.statusText,o.status))},o.onerror=()=>{this._logger.log(i.Warning,`Error from HTTP request. ${o.status}: ${o.statusText}.`),n(new v(o.statusText,o.status))},o.ontimeout=()=>{this._logger.log(i.Warning,"Timeout from HTTP request."),n(new M)},o.send(e.content)}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class fe extends D{constructor(e){if(super(),typeof fetch<"u"||m.isNode)this._httpClient=new de(e);else{if(!(typeof XMLHttpRequest<"u"))throw new Error("No usable HttpClient found.");this._httpClient=new ge(e)}}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new y):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}var f=S(37611);class _e{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class Z{get pollAborted(){return this._pollAbort.aborted}constructor(e,t,n){this._httpClient=e,this._logger=t,this._pollAbort=new _e,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}connect(e,t){var n=this;return(0,d.Z)(function*(){if(b.isRequired(e,"url"),b.isRequired(t,"transferFormat"),b.isIn(t,f.k,"transferFormat"),n._url=e,n._logger.log(i.Trace,"(LongPolling transport) Connecting."),t===f.k.Binary&&typeof XMLHttpRequest<"u"&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[o,r]=I(),a={[o]:r,...n._options.headers},c={abortSignal:n._pollAbort.signal,headers:a,timeout:1e5,withCredentials:n._options.withCredentials};t===f.k.Binary&&(c.responseType="arraybuffer");const l=`${e}&_=${Date.now()}`;n._logger.log(i.Trace,`(LongPolling transport) polling: ${l}.`);const h=yield n._httpClient.get(l,c);200!==h.statusCode?(n._logger.log(i.Error,`(LongPolling transport) Unexpected response code: ${h.statusCode}.`),n._closeError=new v(h.statusText||"",h.statusCode),n._running=!1):n._running=!0,n._receiving=n._poll(n._url,c)})()}_poll(e,t){var n=this;return(0,d.Z)(function*(){try{for(;n._running;)try{const o=`${e}&_=${Date.now()}`;n._logger.log(i.Trace,`(LongPolling transport) polling: ${o}.`);const r=yield n._httpClient.get(o,t);204===r.statusCode?(n._logger.log(i.Information,"(LongPolling transport) Poll terminated by server."),n._running=!1):200!==r.statusCode?(n._logger.log(i.Error,`(LongPolling transport) Unexpected response code: ${r.statusCode}.`),n._closeError=new v(r.statusText||"",r.statusCode),n._running=!1):r.content?(n._logger.log(i.Trace,`(LongPolling transport) data received. ${$(r.content,n._options.logMessageContent)}.`),n.onreceive&&n.onreceive(r.content)):n._logger.log(i.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(o){n._running?o instanceof M?n._logger.log(i.Trace,"(LongPolling transport) Poll timed out, reissuing."):(n._closeError=o,n._running=!1):n._logger.log(i.Trace,`(LongPolling transport) Poll errored after shutdown: ${o.message}`)}}finally{n._logger.log(i.Trace,"(LongPolling transport) Polling complete."),n.pollAborted||n._raiseOnClose()}})()}send(e){var t=this;return(0,d.Z)(function*(){return t._running?j(t._logger,"LongPolling",t._httpClient,t._url,e,t._options):Promise.reject(new Error("Cannot send until the transport is connected"))})()}stop(){var e=this;return(0,d.Z)(function*(){e._logger.log(i.Trace,"(LongPolling transport) Stopping polling."),e._running=!1,e._pollAbort.abort();try{yield e._receiving,e._logger.log(i.Trace,`(LongPolling transport) sending DELETE request to ${e._url}.`);const t={},[n,o]=I();t[n]=o;const r={headers:{...t,...e._options.headers},timeout:e._options.timeout,withCredentials:e._options.withCredentials};let a;try{yield e._httpClient.delete(e._url,r)}catch(c){a=c}a?a instanceof v&&e._logger.log(i.Trace,404===a.statusCode?"(LongPolling transport) A 404 response was returned from sending a DELETE request.":`(LongPolling transport) Error sending a DELETE request: ${a}`):e._logger.log(i.Trace,"(LongPolling transport) DELETE request accepted.")}finally{e._logger.log(i.Trace,"(LongPolling transport) Stop finished."),e._raiseOnClose()}})()}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(i.Trace,e),this.onclose(this._closeError)}}}class pe{constructor(e,t,n,o){this._httpClient=e,this._accessToken=t,this._logger=n,this._options=o,this.onreceive=null,this.onclose=null}connect(e,t){var n=this;return(0,d.Z)(function*(){return b.isRequired(e,"url"),b.isRequired(t,"transferFormat"),b.isIn(t,f.k,"transferFormat"),n._logger.log(i.Trace,"(SSE transport) Connecting."),n._url=e,n._accessToken&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(n._accessToken)}`),new Promise((o,r)=>{let c,a=!1;if(t===f.k.Text){if(m.isBrowser||m.isWebWorker)c=new n._options.EventSource(e,{withCredentials:n._options.withCredentials});else{const l=n._httpClient.getCookieString(e),h={};h.Cookie=l;const[g,_]=I();h[g]=_,c=new n._options.EventSource(e,{withCredentials:n._options.withCredentials,headers:{...h,...n._options.headers}})}try{c.onmessage=l=>{if(n.onreceive)try{n._logger.log(i.Trace,`(SSE transport) data received. ${$(l.data,n._options.logMessageContent)}.`),n.onreceive(l.data)}catch(h){return void n._close(h)}},c.onerror=l=>{a?n._close():r(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},c.onopen=()=>{n._logger.log(i.Information,`SSE connected to ${n._url}`),n._eventSource=c,a=!0,o()}}catch(l){return void r(l)}}else r(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))})})()}send(e){var t=this;return(0,d.Z)(function*(){return t._eventSource?j(t._logger,"SSE",t._httpClient,t._url,e,t._options):Promise.reject(new Error("Cannot send until the transport is connected"))})()}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class me{constructor(e,t,n,o,r,a){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=o,this._webSocketConstructor=r,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=a}connect(e,t){var n=this;return(0,d.Z)(function*(){let o;return b.isRequired(e,"url"),b.isRequired(t,"transferFormat"),b.isIn(t,f.k,"transferFormat"),n._logger.log(i.Trace,"(WebSockets transport) Connecting."),n._accessTokenFactory&&(o=yield n._accessTokenFactory()),new Promise((r,a)=>{let c;e=e.replace(/^http/,"ws");const l=n._httpClient.getCookieString(e);let h=!1;if(m.isNode||m.isReactNative){const g={},[_,T]=I();g[_]=T,o&&(g[P.Authorization]=`Bearer ${o}`),l&&(g[P.Cookie]=l),c=new n._webSocketConstructor(e,void 0,{headers:{...g,...n._headers}})}else o&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(o)}`);c||(c=new n._webSocketConstructor(e)),t===f.k.Binary&&(c.binaryType="arraybuffer"),c.onopen=g=>{n._logger.log(i.Information,`WebSocket connected to ${e}.`),n._webSocket=c,h=!0,r()},c.onerror=g=>{let _=null;_=typeof ErrorEvent<"u"&&g instanceof ErrorEvent?g.error:"There was an error with the transport",n._logger.log(i.Information,`(WebSockets transport) ${_}.`)},c.onmessage=g=>{if(n._logger.log(i.Trace,`(WebSockets transport) data received. ${$(g.data,n._logMessageContent)}.`),n.onreceive)try{n.onreceive(g.data)}catch(_){return void n._close(_)}},c.onclose=g=>{if(h)n._close(g);else{let _=null;_=typeof ErrorEvent<"u"&&g instanceof ErrorEvent?g.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",a(new Error(_))}}})})()}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(i.Trace,`(WebSockets transport) sending data. ${$(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(i.Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this._isCloseEvent(e)||!1!==e.wasClean&&1e3===e.code?e instanceof Error?this.onclose(e):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)))}_isCloseEvent(e){return e&&"boolean"==typeof e.wasClean&&"number"==typeof e.code}}class be{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,b.isRequired(e,"url"),this._logger=function te(s){return void 0===s?new x(i.Information):null===s?R.instance:void 0!==s.log?s:new x(s)}(t.logger),this.baseUrl=this._resolveUrl(e),(t=t||{}).logMessageContent=void 0!==t.logMessageContent&&t.logMessageContent,"boolean"!=typeof t.withCredentials&&void 0!==t.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.withCredentials=void 0===t.withCredentials||t.withCredentials,t.timeout=void 0===t.timeout?1e5:t.timeout;let n=null,o=null;m.isNode&&(n=function he(){return S(6139)}(),o=function ue(){return S(18022)}()),!m.isNode&&typeof WebSocket<"u"&&!t.WebSocket?t.WebSocket=WebSocket:m.isNode&&!t.WebSocket&&n&&(t.WebSocket=n),!m.isNode&&typeof EventSource<"u"&&!t.EventSource?t.EventSource=EventSource:m.isNode&&!t.EventSource&&typeof o<"u"&&(t.EventSource=o),this._httpClient=new J(t.httpClient||new fe(this._logger),t.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}start(e){var t=this;return(0,d.Z)(function*(){if(b.isIn(e=e||f.k.Binary,f.k,"transferFormat"),t._logger.log(i.Debug,`Starting connection with transfer format '${f.k[e]}'.`),"Disconnected"!==t._connectionState)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(t._connectionState="Connecting",t._startInternalPromise=t._startInternal(e),yield t._startInternalPromise,"Disconnecting"===t._connectionState){const n="Failed to start the HttpConnection before stop() was called.";return t._logger.log(i.Error,n),yield t._stopPromise,Promise.reject(new y(n))}if("Connected"!==t._connectionState){const n="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return t._logger.log(i.Error,n),Promise.reject(new y(n))}t._connectionStarted=!0})()}send(e){return"Connected"!==this._connectionState?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new W(this.transport)),this._sendQueue.send(e))}stop(e){var t=this;return(0,d.Z)(function*(){return"Disconnected"===t._connectionState?(t._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===t._connectionState?(t._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),t._stopPromise):(t._connectionState="Disconnecting",t._stopPromise=new Promise(n=>{t._stopPromiseResolver=n}),yield t._stopInternal(e),void(yield t._stopPromise))})()}_stopInternal(e){var t=this;return(0,d.Z)(function*(){t._stopError=e;try{yield t._startInternalPromise}catch{}if(t.transport){try{yield t.transport.stop()}catch(n){t._logger.log(i.Error,`HttpConnection.transport.stop() threw error '${n}'.`),t._stopConnection()}t.transport=void 0}else t._logger.log(i.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")})()}_startInternal(e){var t=this;return(0,d.Z)(function*(){let n=t.baseUrl;t._accessTokenFactory=t._options.accessTokenFactory,t._httpClient._accessTokenFactory=t._accessTokenFactory;try{if(t._options.skipNegotiation){if(t._options.transport!==f.n.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");t.transport=t._constructTransport(f.n.WebSockets),yield t._startTransport(n,e)}else{let o=null,r=0;do{if(o=yield t._getNegotiationResponse(n),"Disconnecting"===t._connectionState||"Disconnected"===t._connectionState)throw new y("The connection was stopped during negotiation.");if(o.error)throw new Error(o.error);if(o.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(o.url&&(n=o.url),o.accessToken){const a=o.accessToken;t._accessTokenFactory=()=>a,t._httpClient._accessToken=a,t._httpClient._accessTokenFactory=void 0}r++}while(o.url&&r<100);if(100===r&&o.url)throw new Error("Negotiate redirection limit exceeded.");yield t._createTransport(n,t._options.transport,o,e)}t.transport instanceof Z&&(t.features.inherentKeepAlive=!0),"Connecting"===t._connectionState&&(t._logger.log(i.Debug,"The HttpConnection connected successfully."),t._connectionState="Connected")}catch(o){return t._logger.log(i.Error,"Failed to start the connection: "+o),t._connectionState="Disconnected",t.transport=void 0,t._stopPromiseResolver(),Promise.reject(o)}})()}_getNegotiationResponse(e){var t=this;return(0,d.Z)(function*(){const n={},[o,r]=I();n[o]=r;const a=t._resolveNegotiateUrl(e);t._logger.log(i.Debug,`Sending negotiation request: ${a}.`);try{const c=yield t._httpClient.post(a,{content:"",headers:{...n,...t._options.headers},timeout:t._options.timeout,withCredentials:t._options.withCredentials});if(200!==c.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${c.statusCode}'`));const l=JSON.parse(c.content);return(!l.negotiateVersion||l.negotiateVersion<1)&&(l.connectionToken=l.connectionId),l.useStatefulReconnect&&!0!==t._options._useStatefulReconnect?Promise.reject(new L("Client didn't negotiate Stateful Reconnect but the server did.")):l}catch(c){let l="Failed to complete negotiation with the server: "+c;return c instanceof v&&404===c.statusCode&&(l+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),t._logger.log(i.Error,l),Promise.reject(new L(l))}})()}_createConnectUrl(e,t){return t?e+(-1===e.indexOf("?")?"?":"&")+`id=${t}`:e}_createTransport(e,t,n,o){var r=this;return(0,d.Z)(function*(){let a=r._createConnectUrl(e,n.connectionToken);if(r._isITransport(t))return r._logger.log(i.Debug,"Connection was provided an instance of ITransport, using that directly."),r.transport=t,yield r._startTransport(a,o),void(r.connectionId=n.connectionId);const c=[],l=n.availableTransports||[];let h=n;for(const g of l){const _=r._resolveTransportOrError(g,t,o,!0===h?.useStatefulReconnect);if(_ instanceof Error)c.push(`${g.transport} failed:`),c.push(_);else if(r._isITransport(_)){if(r.transport=_,!h){try{h=yield r._getNegotiationResponse(e)}catch(T){return Promise.reject(T)}a=r._createConnectUrl(e,h.connectionToken)}try{return yield r._startTransport(a,o),void(r.connectionId=h.connectionId)}catch(T){if(r._logger.log(i.Error,`Failed to start the transport '${g.transport}': ${T}`),h=void 0,c.push(new G(`${g.transport} failed: ${T}`,f.n[g.transport])),"Connecting"!==r._connectionState){const X="Failed to select transport before stop() was called.";return r._logger.log(i.Debug,X),Promise.reject(new y(X))}}}}return Promise.reject(c.length>0?new Q(`Unable to connect to the server with any of the available transports. ${c.join(" ")}`,c):new Error("None of the transports supported by the client are supported by the server."))})()}_constructTransport(e){switch(e){case f.n.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new me(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case f.n.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new pe(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case f.n.LongPolling:return new Z(this._httpClient,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){var n=this;return this.transport.onreceive=this.onreceive,this.transport.onclose=this.features.reconnect?function(){var o=(0,d.Z)(function*(r){let a=!1;if(n.features.reconnect){try{n.features.disconnected(),yield n.transport.connect(e,t),yield n.features.resend()}catch{a=!0}a&&n._stopConnection(r)}else n._stopConnection(r)});return function(r){return o.apply(this,arguments)}}():o=>this._stopConnection(o),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n,o){const r=f.n[e.transport];if(null==r)return this._logger.log(i.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(!function we(s,e){return!s||0!=(e&s)}(t,r))return this._logger.log(i.Debug,`Skipping transport '${f.n[r]}' because it was disabled by the client.`),new q(`'${f.n[r]}' is disabled by the client.`,r);if(!(e.transferFormats.map(c=>f.k[c]).indexOf(n)>=0))return this._logger.log(i.Debug,`Skipping transport '${f.n[r]}' because it does not support the requested transfer format '${f.k[n]}'.`),new Error(`'${f.n[r]}' does not support ${f.k[n]}.`);if(r===f.n.WebSockets&&!this._options.WebSocket||r===f.n.ServerSentEvents&&!this._options.EventSource)return this._logger.log(i.Debug,`Skipping transport '${f.n[r]}' because it is not supported in your environment.'`),new V(`'${f.n[r]}' is not supported in your environment.`,r);this._logger.log(i.Debug,`Selecting transport '${f.n[r]}'.`);try{return this.features.reconnect=r===f.n.WebSockets?o:void 0,this._constructTransport(r)}catch(c){return c}}_isITransport(e){return e&&"object"==typeof e&&"connect"in e}_stopConnection(e){if(this._logger.log(i.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,"Disconnected"!==this._connectionState){if("Connecting"===this._connectionState)throw this._logger.log(i.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),e?this._logger.log(i.Error,`Connection disconnected with error '${e}'.`):this._logger.log(i.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(i.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(i.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}else this._logger.log(i.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)}_resolveUrl(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if(!m.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(i.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=new URL(e);t.pathname.endsWith("/")?t.pathname+="negotiate":t.pathname+="/negotiate";const n=new URLSearchParams(t.searchParams);return n.has("negotiateVersion")||n.append("negotiateVersion",this._negotiateVersion.toString()),n.has("useStatefulReconnect")?"true"===n.get("useStatefulReconnect")&&(this._options._useStatefulReconnect=!0):!0===this._options._useStatefulReconnect&&n.append("useStatefulReconnect","true"),t.search=n.toString(),t.toString()}}class W{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new A,this._transportResult=new A,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new A),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}_sendLoop(){var e=this;return(0,d.Z)(function*(){for(;;){if(yield e._sendBufferedData.promise,!e._executing){e._transportResult&&e._transportResult.reject("Connection stopped.");break}e._sendBufferedData=new A;const t=e._transportResult;e._transportResult=void 0;const n="string"==typeof e._buffer[0]?e._buffer.join(""):W._concatBuffers(e._buffer);e._buffer.length=0;try{yield e._transport.send(n),t.resolve()}catch(o){t.reject(o)}}})()}static _concatBuffers(e){const t=e.map(r=>r.byteLength).reduce((r,a)=>r+a),n=new Uint8Array(t);let o=0;for(const r of e)n.set(new Uint8Array(r),o),o+=r.byteLength;return n.buffer}}class A{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}}class w{static write(e){return`${e}${w.RecordSeparator}`}static parse(e){if(e[e.length-1]!==w.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(w.RecordSeparator);return t.pop(),t}}w.RecordSeparatorCode=30,w.RecordSeparator=String.fromCharCode(w.RecordSeparatorCode);class Se{writeHandshakeRequest(e){return w.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(k(e)){const c=new Uint8Array(e),l=c.indexOf(w.RecordSeparatorCode);if(-1===l)throw new Error("Message is incomplete.");const h=l+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(c.slice(0,h))),n=c.byteLength>h?c.slice(h).buffer:null}else{const c=e,l=c.indexOf(w.RecordSeparator);if(-1===l)throw new Error("Message is incomplete.");const h=l+1;t=c.substring(0,h),n=c.length>h?c.substring(h):null}const o=w.parse(t),r=JSON.parse(o[0]);if(r.type)throw new Error("Expected a handshake response from the server.");return[n,r]}}var u=(()=>{return(s=u||(u={}))[s.Invocation=1]="Invocation",s[s.StreamItem=2]="StreamItem",s[s.Completion=3]="Completion",s[s.StreamInvocation=4]="StreamInvocation",s[s.CancelInvocation=5]="CancelInvocation",s[s.Ping=6]="Ping",s[s.Close=7]="Close",s[s.Ack=8]="Ack",s[s.Sequence=9]="Sequence",u;var s})();class ye{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new ne(this,e)}}class Ce{constructor(e,t,n){this._bufferSize=1e5,this._messages=[],this._totalMessageCount=0,this._waitForSequenceMessage=!1,this._nextReceivingSequenceId=1,this._latestReceivedSequenceId=0,this._bufferedByteCount=0,this._reconnectInProgress=!1,this._protocol=e,this._connection=t,this._bufferSize=n}_send(e){var t=this;return(0,d.Z)(function*(){const n=t._protocol.writeMessage(e);let o=Promise.resolve();if(t._isInvocationMessage(e)){t._totalMessageCount++;let r=()=>{},a=()=>{};k(n)?t._bufferedByteCount+=n.byteLength:t._bufferedByteCount+=n.length,t._bufferedByteCount>=t._bufferSize&&(o=new Promise((c,l)=>{r=c,a=l})),t._messages.push(new ve(n,t._totalMessageCount,r,a))}try{t._reconnectInProgress||(yield t._connection.send(n))}catch{t._disconnected()}yield o})()}_ack(e){let t=-1;for(let n=0;n<this._messages.length;n++){const o=this._messages[n];if(o._id<=e.sequenceId)t=n,k(o._message)?this._bufferedByteCount-=o._message.byteLength:this._bufferedByteCount-=o._message.length,o._resolver();else{if(!(this._bufferedByteCount<this._bufferSize))break;o._resolver()}}-1!==t&&(this._messages=this._messages.slice(t+1))}_shouldProcessMessage(e){if(this._waitForSequenceMessage)return e.type===u.Sequence&&(this._waitForSequenceMessage=!1,!0);if(!this._isInvocationMessage(e))return!0;const t=this._nextReceivingSequenceId;return this._nextReceivingSequenceId++,t<=this._latestReceivedSequenceId?(t===this._latestReceivedSequenceId&&this._ackTimer(),!1):(this._latestReceivedSequenceId=t,this._ackTimer(),!0)}_resetSequence(e){e.sequenceId>this._nextReceivingSequenceId?this._connection.stop(new Error("Sequence ID greater than amount of messages we've received.")):this._nextReceivingSequenceId=e.sequenceId}_disconnected(){this._reconnectInProgress=!0,this._waitForSequenceMessage=!0}_resend(){var e=this;return(0,d.Z)(function*(){const t=0!==e._messages.length?e._messages[0]._id:e._totalMessageCount+1;yield e._connection.send(e._protocol.writeMessage({type:u.Sequence,sequenceId:t}));const n=e._messages;for(const o of n)yield e._connection.send(o._message);e._reconnectInProgress=!1})()}_dispose(e){e??(e=new Error("Unable to reconnect to server."));for(const t of this._messages)t._rejector(e)}_isInvocationMessage(e){switch(e.type){case u.Invocation:case u.StreamItem:case u.Completion:case u.StreamInvocation:case u.CancelInvocation:return!0;case u.Close:case u.Sequence:case u.Ping:case u.Ack:return!1}}_ackTimer(){var e=this;void 0===this._ackTimerHandle&&(this._ackTimerHandle=setTimeout((0,d.Z)(function*(){try{e._reconnectInProgress||(yield e._connection.send(e._protocol.writeMessage({type:u.Ack,sequenceId:e._latestReceivedSequenceId})))}catch{}clearTimeout(e._ackTimerHandle),e._ackTimerHandle=void 0}),1e3))}}class ve{constructor(e,t,n,o){this._message=e,this._id=t,this._resolver=n,this._rejector=o}}var p=(()=>{return(s=p||(p={})).Disconnected="Disconnected",s.Connecting="Connecting",s.Connected="Connected",s.Disconnecting="Disconnecting",s.Reconnecting="Reconnecting",p;var s})();class B{static create(e,t,n,o,r,a,c){return new B(e,t,n,o,r,a,c)}constructor(e,t,n,o,r,a,c){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(i.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},b.isRequired(e,"connection"),b.isRequired(t,"logger"),b.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=r??3e4,this.keepAliveIntervalInMilliseconds=a??15e3,this._statefulReconnectBufferSize=c??1e5,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=o,this._handshakeProtocol=new Se,this.connection.onreceive=l=>this._processIncomingData(l),this.connection.onclose=l=>this._connectionClosed(l),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=p.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:u.Ping})}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==p.Disconnected&&this._connectionState!==p.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}_startWithStateTransitions(){var e=this;return(0,d.Z)(function*(){if(e._connectionState!==p.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));e._connectionState=p.Connecting,e._logger.log(i.Debug,"Starting HubConnection.");try{yield e._startInternal(),m.isBrowser&&window.document.addEventListener("freeze",e._freezeEventListener),e._connectionState=p.Connected,e._connectionStarted=!0,e._logger.log(i.Debug,"HubConnection connected successfully.")}catch(t){return e._connectionState=p.Disconnected,e._logger.log(i.Debug,`HubConnection failed to start successfully because of error '${t}'.`),Promise.reject(t)}})()}_startInternal(){var e=this;return(0,d.Z)(function*(){e._stopDuringStartError=void 0,e._receivedHandshakeResponse=!1;const t=new Promise((n,o)=>{e._handshakeResolver=n,e._handshakeRejecter=o});yield e.connection.start(e._protocol.transferFormat);try{let n=e._protocol.version;e.connection.features.reconnect||(n=1);const o={protocol:e._protocol.name,version:n};if(e._logger.log(i.Debug,"Sending handshake request."),yield e._sendMessage(e._handshakeProtocol.writeHandshakeRequest(o)),e._logger.log(i.Information,`Using HubProtocol '${e._protocol.name}'.`),e._cleanupTimeout(),e._resetTimeoutPeriod(),e._resetKeepAliveInterval(),yield t,e._stopDuringStartError)throw e._stopDuringStartError;!!e.connection.features.reconnect&&(e._messageBuffer=new Ce(e._protocol,e.connection,e._statefulReconnectBufferSize),e.connection.features.disconnected=e._messageBuffer._disconnected.bind(e._messageBuffer),e.connection.features.resend=()=>{if(e._messageBuffer)return e._messageBuffer._resend()}),e.connection.features.inherentKeepAlive||(yield e._sendMessage(e._cachedPingMessage))}catch(n){throw e._logger.log(i.Debug,`Hub handshake failed with error '${n}' during start(). Stopping HubConnection.`),e._cleanupTimeout(),e._cleanupPingTimer(),yield e.connection.stop(n),n}})()}stop(){var e=this;return(0,d.Z)(function*(){const t=e._startPromise;e.connection.features.reconnect=!1,e._stopPromise=e._stopInternal(),yield e._stopPromise;try{yield t}catch{}})()}_stopInternal(e){if(this._connectionState===p.Disconnected)return this._logger.log(i.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve();if(this._connectionState===p.Disconnecting)return this._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;const t=this._connectionState;return this._connectionState=p.Disconnecting,this._logger.log(i.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(i.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(t===p.Connected&&this._sendCloseMessage(),this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new y("The connection was stopped before the hub handshake could complete."),this.connection.stop(e))}_sendCloseMessage(){var e=this;return(0,d.Z)(function*(){try{yield e._sendWithProtocol(e._createCloseMessage())}catch{}})()}stream(e,...t){const[n,o]=this._replaceStreamingParams(t),r=this._createStreamInvocation(e,t,o);let a;const c=new ye;return c.cancelCallback=()=>{const l=this._createCancelInvocation(r.invocationId);return delete this._callbacks[r.invocationId],a.then(()=>this._sendWithProtocol(l))},this._callbacks[r.invocationId]=(l,h)=>{h?c.error(h):l&&(l.type===u.Completion?l.error?c.error(new Error(l.error)):c.complete():c.next(l.item))},a=this._sendWithProtocol(r).catch(l=>{c.error(l),delete this._callbacks[r.invocationId]}),this._launchStreams(n,a),c}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._messageBuffer?this._messageBuffer._send(e):this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,o]=this._replaceStreamingParams(t),r=this._sendWithProtocol(this._createInvocation(e,t,!0,o));return this._launchStreams(n,r),r}invoke(e,...t){const[n,o]=this._replaceStreamingParams(t),r=this._createInvocation(e,t,!1,o);return new Promise((c,l)=>{this._callbacks[r.invocationId]=(g,_)=>{_?l(_):g&&(g.type===u.Completion?g.error?l(new Error(g.error)):c(g.result):l(new Error(`Unexpected message type: ${g.type}`)))};const h=this._sendWithProtocol(r).catch(g=>{l(g),delete this._callbacks[r.invocationId]});this._launchStreams(n,h)})}on(e,t){!e||!t||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),-1===this._methods[e].indexOf(t)&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(n)if(t){const o=n.indexOf(t);-1!==o&&(n.splice(o,1),0===n.length&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const n of t)if(!this._messageBuffer||this._messageBuffer._shouldProcessMessage(n))switch(n.type){case u.Invocation:this._invokeClientMethod(n);break;case u.StreamItem:case u.Completion:{const o=this._callbacks[n.invocationId];if(o){n.type===u.Completion&&delete this._callbacks[n.invocationId];try{o(n)}catch(r){this._logger.log(i.Error,`Stream callback threw error: ${O(r)}`)}}break}case u.Ping:break;case u.Close:{this._logger.log(i.Information,"Close message received from server.");const o=n.error?new Error("Server returned an error on close: "+n.error):void 0;!0===n.allowReconnect?this.connection.stop(o):this._stopPromise=this._stopInternal(o);break}case u.Ack:this._messageBuffer&&this._messageBuffer._ack(n);break;case u.Sequence:this._messageBuffer&&this._messageBuffer._resetSequence(n);break;default:this._logger.log(i.Warning,`Invalid message type: ${n.type}.`)}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(o){const r="Error parsing handshake response: "+o;this._logger.log(i.Error,r);const a=new Error(r);throw this._handshakeRejecter(a),a}if(t.error){const o="Server returned handshake error: "+t.error;this._logger.log(i.Error,o);const r=new Error(o);throw this._handshakeRejecter(r),r}return this._logger.log(i.Debug,"Server handshake complete."),this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){var e=this;if(!(this.connection.features&&this.connection.features.inherentKeepAlive||(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),void 0!==this._pingServerHandle))){let t=this._nextKeepAlive-(new Date).getTime();t<0&&(t=0),this._pingServerHandle=setTimeout((0,d.Z)(function*(){if(e._connectionState===p.Connected)try{yield e._sendMessage(e._cachedPingMessage)}catch{e._cleanupPingTimer()}}),t)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(e){var t=this;return(0,d.Z)(function*(){const n=e.target.toLowerCase(),o=t._methods[n];if(!o)return t._logger.log(i.Warning,`No client method with the name '${n}' found.`),void(e.invocationId&&(t._logger.log(i.Warning,`No result given for '${n}' method and invocation ID '${e.invocationId}'.`),yield t._sendWithProtocol(t._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null))));const r=o.slice(),a=!!e.invocationId;let c,l,h;for(const g of r)try{const _=c;c=yield g.apply(t,e.arguments),a&&c&&_&&(t._logger.log(i.Error,`Multiple results provided for '${n}'. Sending error to server.`),h=t._createCompletionMessage(e.invocationId,"Client provided multiple results.",null)),l=void 0}catch(_){l=_,t._logger.log(i.Error,`A callback for the method '${n}' threw error '${_}'.`)}h?yield t._sendWithProtocol(h):a?(l?h=t._createCompletionMessage(e.invocationId,`${l}`,null):void 0!==c?h=t._createCompletionMessage(e.invocationId,null,c):(t._logger.log(i.Warning,`No result given for '${n}' method and invocation ID '${e.invocationId}'.`),h=t._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)),yield t._sendWithProtocol(h)):c&&t._logger.log(i.Error,`Result given for '${n}' method but server is not expecting a result.`)})()}_connectionClosed(e){this._logger.log(i.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new y("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===p.Disconnecting?this._completeClose(e):this._connectionState===p.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===p.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=p.Disconnected,this._connectionStarted=!1,this._messageBuffer&&(this._messageBuffer._dispose(e??new Error("Connection closed.")),this._messageBuffer=void 0),m.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(i.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}_reconnect(e){var t=this;return(0,d.Z)(function*(){const n=Date.now();let o=0,r=void 0!==e?e:new Error("Attempting to reconnect due to a unknown error."),a=t._getNextRetryDelay(o++,0,r);if(null===a)return t._logger.log(i.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void t._completeClose(e);if(t._connectionState=p.Reconnecting,t._logger.log(i.Information,e?`Connection reconnecting because of error '${e}'.`:"Connection reconnecting."),0!==t._reconnectingCallbacks.length){try{t._reconnectingCallbacks.forEach(c=>c.apply(t,[e]))}catch(c){t._logger.log(i.Error,`An onreconnecting callback called with error '${e}' threw error '${c}'.`)}if(t._connectionState!==p.Reconnecting)return void t._logger.log(i.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}for(;null!==a;){if(t._logger.log(i.Information,`Reconnect attempt number ${o} will start in ${a} ms.`),yield new Promise(c=>{t._reconnectDelayHandle=setTimeout(c,a)}),t._reconnectDelayHandle=void 0,t._connectionState!==p.Reconnecting)return void t._logger.log(i.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(yield t._startInternal(),t._connectionState=p.Connected,t._logger.log(i.Information,"HubConnection reconnected successfully."),0!==t._reconnectedCallbacks.length)try{t._reconnectedCallbacks.forEach(c=>c.apply(t,[t.connection.connectionId]))}catch(c){t._logger.log(i.Error,`An onreconnected callback called with connectionId '${t.connection.connectionId}; threw error '${c}'.`)}return}catch(c){if(t._logger.log(i.Information,`Reconnect attempt failed because of error '${c}'.`),t._connectionState!==p.Reconnecting)return t._logger.log(i.Debug,`Connection moved to the '${t._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(t._connectionState===p.Disconnecting&&t._completeClose());r=c instanceof Error?c:new Error(c.toString()),a=t._getNextRetryDelay(o++,Date.now()-n,r)}}t._logger.log(i.Information,`Reconnect retries have been exhausted after ${Date.now()-n} ms and ${o} failed attempts. Connection disconnecting.`),t._completeClose()})()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(o){return this._logger.log(i.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${o}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach(n=>{const o=t[n];try{o(null,e)}catch(r){this._logger.log(i.Error,`Stream 'error' callback called with '${e}' threw error: ${O(r)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,o){if(n)return 0!==o.length?{arguments:t,streamIds:o,target:e,type:u.Invocation}:{arguments:t,target:e,type:u.Invocation};{const r=this._invocationId;return this._invocationId++,0!==o.length?{arguments:t,invocationId:r.toString(),streamIds:o,target:e,type:u.Invocation}:{arguments:t,invocationId:r.toString(),target:e,type:u.Invocation}}}_launchStreams(e,t){if(0!==e.length){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n)))},error:o=>{let r;r=o instanceof Error?o.message:o&&o.toString?o.toString():"Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n,r)))},next:o=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(n,o)))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let o=0;o<e.length;o++){const r=e[o];if(this._isObservable(r)){const a=this._invocationId;this._invocationId++,t[a]=r,n.push(a.toString()),e.splice(o,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&"function"==typeof e.subscribe}_createStreamInvocation(e,t,n){const o=this._invocationId;return this._invocationId++,0!==n.length?{arguments:t,invocationId:o.toString(),streamIds:n,target:e,type:u.StreamInvocation}:{arguments:t,invocationId:o.toString(),target:e,type:u.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:u.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:u.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:u.Completion}:{invocationId:e,result:n,type:u.Completion}}_createCloseMessage(){return{type:u.Close}}}class Pe{constructor(){this.name="json",this.version=2,this.transferFormat=f.k.Text}parseMessages(e,t){if("string"!=typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===t&&(t=R.instance);const n=w.parse(e),o=[];for(const r of n){const a=JSON.parse(r);if("number"!=typeof a.type)throw new Error("Invalid payload.");switch(a.type){case u.Invocation:this._isInvocationMessage(a);break;case u.StreamItem:this._isStreamItemMessage(a);break;case u.Completion:this._isCompletionMessage(a);break;case u.Ping:case u.Close:break;case u.Ack:this._isAckMessage(a);break;case u.Sequence:this._isSequenceMessage(a);break;default:t.log(i.Information,"Unknown message type '"+a.type+"' ignored.");continue}o.push(a)}return o}writeMessage(e){return w.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),void 0!==e.invocationId&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),void 0===e.item)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_isAckMessage(e){if("number"!=typeof e.sequenceId)throw new Error("Invalid SequenceId for Ack message.")}_isSequenceMessage(e){if("number"!=typeof e.sequenceId)throw new Error("Invalid SequenceId for Sequence message.")}_assertNotEmptyString(e,t){if("string"!=typeof e||""===e)throw new Error(t)}}const Re={trace:i.Trace,debug:i.Debug,info:i.Information,information:i.Information,warn:i.Warning,warning:i.Warning,error:i.Error,critical:i.Critical,none:i.None};class De{configureLogging(e){if(b.isRequired(e,"logging"),function xe(s){return void 0!==s.log}(e))this.logger=e;else if("string"==typeof e){const t=function $e(s){const e=Re[s.toLowerCase()];if(typeof e<"u")return e;throw new Error(`Unknown log level: ${s}`)}(e);this.logger=new x(t)}else this.logger=new x(e);return this}withUrl(e,t){return b.isRequired(e,"url"),b.isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"==typeof t?{...this.httpConnectionOptions,...t}:{...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return b.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return this.reconnectPolicy=e?Array.isArray(e)?new C(e):e:new C,this}withServerTimeout(e){return b.isRequired(e,"milliseconds"),this._serverTimeoutInMilliseconds=e,this}withKeepAliveInterval(e){return b.isRequired(e,"milliseconds"),this._keepAliveIntervalInMilliseconds=e,this}withStatefulReconnect(e){return void 0===this.httpConnectionOptions&&(this.httpConnectionOptions={}),this.httpConnectionOptions._useStatefulReconnect=!0,this._statefulReconnectBufferSize=e?.bufferSize,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new be(this.url,e);return B.create(t,this.logger||R.instance,this.protocol||new Pe,this.reconnectPolicy,this._serverTimeoutInMilliseconds,this._keepAliveIntervalInMilliseconds,this._statefulReconnectBufferSize)}}},37611:(K,H,S)=>{"use strict";S.d(H,{k:()=>C,n:()=>E});var E=(()=>{return(d=E||(E={}))[d.None=0]="None",d[d.WebSockets=1]="WebSockets",d[d.ServerSentEvents=2]="ServerSentEvents",d[d.LongPolling=4]="LongPolling",E;var d})(),C=(()=>{return(d=C||(C={}))[d.Text=1]="Text",d[d.Binary=2]="Binary",C;var d})()},28470:()=>{},18022:()=>{},86045:()=>{},98190:()=>{},57333:()=>{},6139:()=>{}}]);